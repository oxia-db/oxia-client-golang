// Copyright 2023-2025 The Oxia Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// OxiaClient

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: client.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardKeyRouter int32

const (
	ShardKeyRouter_UNKNOWN ShardKeyRouter = 0
	ShardKeyRouter_XXHASH3 ShardKeyRouter = 1
)

// Enum value maps for ShardKeyRouter.
var (
	ShardKeyRouter_name = map[int32]string{
		0: "UNKNOWN",
		1: "XXHASH3",
	}
	ShardKeyRouter_value = map[string]int32{
		"UNKNOWN": 0,
		"XXHASH3": 1,
	}
)

func (x ShardKeyRouter) Enum() *ShardKeyRouter {
	p := new(ShardKeyRouter)
	*p = x
	return p
}

func (x ShardKeyRouter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardKeyRouter) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[0].Descriptor()
}

func (ShardKeyRouter) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[0]
}

func (x ShardKeyRouter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardKeyRouter.Descriptor instead.
func (ShardKeyRouter) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

// *
// The type of key comparison to apply in a get() request
type KeyComparisonType int32

const (
	// The stored key must be equal to the requested key
	KeyComparisonType_EQUAL KeyComparisonType = 0
	// Search for a key that is the highest key that is <= to the requested key
	KeyComparisonType_FLOOR KeyComparisonType = 1
	// Search for a key that is the lowest key that is >= to the requested key
	KeyComparisonType_CEILING KeyComparisonType = 2
	// Search for a key that is the highest key that is < to the requested key
	KeyComparisonType_LOWER KeyComparisonType = 3
	// Search for a key that is the lowest key that is > to the requested key
	KeyComparisonType_HIGHER KeyComparisonType = 4
)

// Enum value maps for KeyComparisonType.
var (
	KeyComparisonType_name = map[int32]string{
		0: "EQUAL",
		1: "FLOOR",
		2: "CEILING",
		3: "LOWER",
		4: "HIGHER",
	}
	KeyComparisonType_value = map[string]int32{
		"EQUAL":   0,
		"FLOOR":   1,
		"CEILING": 2,
		"LOWER":   3,
		"HIGHER":  4,
	}
)

func (x KeyComparisonType) Enum() *KeyComparisonType {
	p := new(KeyComparisonType)
	*p = x
	return p
}

func (x KeyComparisonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyComparisonType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[1].Descriptor()
}

func (KeyComparisonType) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[1]
}

func (x KeyComparisonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyComparisonType.Descriptor instead.
func (KeyComparisonType) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

// *
// Represents all the possible status.
type Status int32

const (
	// Operation was successful
	Status_OK Status = 0
	// The key was not found
	Status_KEY_NOT_FOUND Status = 1
	// The existing version does not match the expected version
	Status_UNEXPECTED_VERSION_ID Status = 2
	// The session that the put request referred to is not alive
	Status_SESSION_DOES_NOT_EXIST Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "KEY_NOT_FOUND",
		2: "UNEXPECTED_VERSION_ID",
		3: "SESSION_DOES_NOT_EXIST",
	}
	Status_value = map[string]int32{
		"OK":                     0,
		"KEY_NOT_FOUND":          1,
		"UNEXPECTED_VERSION_ID":  2,
		"SESSION_DOES_NOT_EXIST": 3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[2].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[2]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

type NotificationType int32

const (
	NotificationType_KEY_CREATED       NotificationType = 0
	NotificationType_KEY_MODIFIED      NotificationType = 1
	NotificationType_KEY_DELETED       NotificationType = 2
	NotificationType_KEY_RANGE_DELETED NotificationType = 3
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "KEY_CREATED",
		1: "KEY_MODIFIED",
		2: "KEY_DELETED",
		3: "KEY_RANGE_DELETED",
	}
	NotificationType_value = map[string]int32{
		"KEY_CREATED":       0,
		"KEY_MODIFIED":      1,
		"KEY_DELETED":       2,
		"KEY_RANGE_DELETED": 3,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[3].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[3]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

// *
// A shard assignments request. Gets all shard-to-server assignments as a
// stream. Each set of assignments in the response stream will contain all the
// assignments to bring the client up to date. For example, if a shard is split,
// the stream will return a single response containing all the new shard
// assignments as opposed to multiple stream responses, each containing a single
// shard assignment.
type ShardAssignmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardAssignmentsRequest) Reset() {
	*x = ShardAssignmentsRequest{}
	mi := &file_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAssignmentsRequest) ProtoMessage() {}

func (x *ShardAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*ShardAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *ShardAssignmentsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// *
// The response to a shard assignments request.
type ShardAssignments struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Namespaces    map[string]*NamespaceShardsAssignment `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardAssignments) Reset() {
	*x = ShardAssignments{}
	mi := &file_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardAssignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAssignments) ProtoMessage() {}

func (x *ShardAssignments) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAssignments.ProtoReflect.Descriptor instead.
func (*ShardAssignments) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *ShardAssignments) GetNamespaces() map[string]*NamespaceShardsAssignment {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// *
// The shards assignments for a given namespace
type NamespaceShardsAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All assignments in the response stream will contain all the
	// assignments to bring the client up to date. For example, if a shard is
	// split, the stream will return a single response containing all the new
	// shard assignments as opposed to multiple stream responses, each containing
	// a single shard assignment.
	Assignments []*ShardAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	// Indicates the mechanism by which the keys are assigned to the individual
	// shards.
	ShardKeyRouter ShardKeyRouter `protobuf:"varint,2,opt,name=shard_key_router,json=shardKeyRouter,proto3,enum=io.oxia.proto.v1.ShardKeyRouter" json:"shard_key_router,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NamespaceShardsAssignment) Reset() {
	*x = NamespaceShardsAssignment{}
	mi := &file_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceShardsAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceShardsAssignment) ProtoMessage() {}

func (x *NamespaceShardsAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceShardsAssignment.ProtoReflect.Descriptor instead.
func (*NamespaceShardsAssignment) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *NamespaceShardsAssignment) GetAssignments() []*ShardAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *NamespaceShardsAssignment) GetShardKeyRouter() ShardKeyRouter {
	if x != nil {
		return x.ShardKeyRouter
	}
	return ShardKeyRouter_UNKNOWN
}

// *
// The assignment of a shard to a server.
type ShardAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The shard id
	Shard int64 `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	// The shard leader, e.g. `host:port`
	Leader string `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	// There could be multiple ways to describe the boundaries of a shard
	//
	// Types that are valid to be assigned to ShardBoundaries:
	//
	//	*ShardAssignment_Int32HashRange
	ShardBoundaries isShardAssignment_ShardBoundaries `protobuf_oneof:"shard_boundaries"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ShardAssignment) Reset() {
	*x = ShardAssignment{}
	mi := &file_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAssignment) ProtoMessage() {}

func (x *ShardAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAssignment.ProtoReflect.Descriptor instead.
func (*ShardAssignment) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *ShardAssignment) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *ShardAssignment) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *ShardAssignment) GetShardBoundaries() isShardAssignment_ShardBoundaries {
	if x != nil {
		return x.ShardBoundaries
	}
	return nil
}

func (x *ShardAssignment) GetInt32HashRange() *Int32HashRange {
	if x != nil {
		if x, ok := x.ShardBoundaries.(*ShardAssignment_Int32HashRange); ok {
			return x.Int32HashRange
		}
	}
	return nil
}

type isShardAssignment_ShardBoundaries interface {
	isShardAssignment_ShardBoundaries()
}

type ShardAssignment_Int32HashRange struct {
	Int32HashRange *Int32HashRange `protobuf:"bytes,3,opt,name=int32_hash_range,json=int32HashRange,proto3,oneof"`
}

func (*ShardAssignment_Int32HashRange) isShardAssignment_ShardBoundaries() {}

// *
// Represents a range of hash values [min, max)
type Int32HashRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The minimum inclusive hash that the shard can contain
	MinHashInclusive uint32 `protobuf:"fixed32,1,opt,name=min_hash_inclusive,json=minHashInclusive,proto3" json:"min_hash_inclusive,omitempty"`
	// The maximum inclusive hash that the shard can contain
	MaxHashInclusive uint32 `protobuf:"fixed32,2,opt,name=max_hash_inclusive,json=maxHashInclusive,proto3" json:"max_hash_inclusive,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Int32HashRange) Reset() {
	*x = Int32HashRange{}
	mi := &file_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int32HashRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32HashRange) ProtoMessage() {}

func (x *Int32HashRange) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32HashRange.ProtoReflect.Descriptor instead.
func (*Int32HashRange) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *Int32HashRange) GetMinHashInclusive() uint32 {
	if x != nil {
		return x.MinHashInclusive
	}
	return 0
}

func (x *Int32HashRange) GetMaxHashInclusive() uint32 {
	if x != nil {
		return x.MaxHashInclusive
	}
	return 0
}

// *
// A batch write request. Applies the batches of requests. Requests are
// processed in positional order within batches and the batch types are
// processed in the following order: puts, deletes, delete_ranges.
type WriteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The shard id. This is optional allow for support for server-side hashing
	// and proxying in the future.
	Shard *int64 `protobuf:"varint,1,opt,name=shard,proto3,oneof" json:"shard,omitempty"`
	// The put requests
	Puts []*PutRequest `protobuf:"bytes,2,rep,name=puts,proto3" json:"puts,omitempty"`
	// The delete requests
	Deletes []*DeleteRequest `protobuf:"bytes,3,rep,name=deletes,proto3" json:"deletes,omitempty"`
	// The delete range requests
	DeleteRanges  []*DeleteRangeRequest `protobuf:"bytes,4,rep,name=delete_ranges,json=deleteRanges,proto3" json:"delete_ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *WriteRequest) GetShard() int64 {
	if x != nil && x.Shard != nil {
		return *x.Shard
	}
	return 0
}

func (x *WriteRequest) GetPuts() []*PutRequest {
	if x != nil {
		return x.Puts
	}
	return nil
}

func (x *WriteRequest) GetDeletes() []*DeleteRequest {
	if x != nil {
		return x.Deletes
	}
	return nil
}

func (x *WriteRequest) GetDeleteRanges() []*DeleteRangeRequest {
	if x != nil {
		return x.DeleteRanges
	}
	return nil
}

// *
// The response to a batch write request. Responses of each type respect the
// order of the original requests.
type WriteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The put responses
	Puts []*PutResponse `protobuf:"bytes,1,rep,name=puts,proto3" json:"puts,omitempty"`
	// The delete responses
	Deletes []*DeleteResponse `protobuf:"bytes,2,rep,name=deletes,proto3" json:"deletes,omitempty"`
	// The delete range responses
	DeleteRanges  []*DeleteRangeResponse `protobuf:"bytes,3,rep,name=delete_ranges,json=deleteRanges,proto3" json:"delete_ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{6}
}

func (x *WriteResponse) GetPuts() []*PutResponse {
	if x != nil {
		return x.Puts
	}
	return nil
}

func (x *WriteResponse) GetDeletes() []*DeleteResponse {
	if x != nil {
		return x.Deletes
	}
	return nil
}

func (x *WriteResponse) GetDeleteRanges() []*DeleteRangeResponse {
	if x != nil {
		return x.DeleteRanges
	}
	return nil
}

// *
// A batch read request. Applies the batches of requests.
type ReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The shard id. This is optional allow for support for server-side hashing
	// and proxying in the future.
	Shard *int64 `protobuf:"varint,1,opt,name=shard,proto3,oneof" json:"shard,omitempty"`
	// The get requests
	Gets          []*GetRequest `protobuf:"bytes,2,rep,name=gets,proto3" json:"gets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7}
}

func (x *ReadRequest) GetShard() int64 {
	if x != nil && x.Shard != nil {
		return *x.Shard
	}
	return 0
}

func (x *ReadRequest) GetGets() []*GetRequest {
	if x != nil {
		return x.Gets
	}
	return nil
}

// *
// The response to a batch read request. Responses of each type respect the
// order of the original requests.
type ReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The get responses
	Gets          []*GetResponse `protobuf:"bytes,1,rep,name=gets,proto3" json:"gets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{8}
}

func (x *ReadResponse) GetGets() []*GetResponse {
	if x != nil {
		return x.Gets
	}
	return nil
}

type SecondaryIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	SecondaryKey  string                 `protobuf:"bytes,2,opt,name=secondary_key,json=secondaryKey,proto3" json:"secondary_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecondaryIndex) Reset() {
	*x = SecondaryIndex{}
	mi := &file_client_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecondaryIndex) ProtoMessage() {}

func (x *SecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecondaryIndex.ProtoReflect.Descriptor instead.
func (*SecondaryIndex) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{9}
}

func (x *SecondaryIndex) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *SecondaryIndex) GetSecondaryKey() string {
	if x != nil {
		return x.SecondaryKey
	}
	return ""
}

// *
// A put request. Persists the specified key and value
type PutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The value
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// An optional expected version_id. The put will fail if the server's current version_id
	// does not match
	ExpectedVersionId *int64 `protobuf:"varint,3,opt,name=expected_version_id,json=expectedVersionId,proto3,oneof" json:"expected_version_id,omitempty"`
	// Optional. Associate the new record with the session (i.e. ephemeral record).
	// When the session expires or is explicitly closed, the record will be automatically
	// removed
	SessionId *int64 `protobuf:"varint,4,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	// Client identifier used to track the client that last modified an
	// ephemeral record.
	ClientIdentity *string `protobuf:"bytes,5,opt,name=client_identity,json=clientIdentity,proto3,oneof" json:"client_identity,omitempty"`
	// If a partition key is present, it supersedes the regular record key in determining the routing of
	// a record to a particular shard. It is passed to the server because it needs to be persisted as
	// part of the record. We would need the partition_key if we're going to do a split of the shards.
	PartitionKey *string `protobuf:"bytes,6,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
	// If one or more sequence key are specified. The key will get added suffixes
	// based on adding the delta to the current highest key with the same prefix
	SequenceKeyDelta []uint64          `protobuf:"varint,7,rep,packed,name=sequence_key_delta,json=sequenceKeyDelta,proto3" json:"sequence_key_delta,omitempty"`
	SecondaryIndexes []*SecondaryIndex `protobuf:"bytes,8,rep,name=secondary_indexes,json=secondaryIndexes,proto3" json:"secondary_indexes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_client_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{10}
}

func (x *PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetExpectedVersionId() int64 {
	if x != nil && x.ExpectedVersionId != nil {
		return *x.ExpectedVersionId
	}
	return 0
}

func (x *PutRequest) GetSessionId() int64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *PutRequest) GetClientIdentity() string {
	if x != nil && x.ClientIdentity != nil {
		return *x.ClientIdentity
	}
	return ""
}

func (x *PutRequest) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

func (x *PutRequest) GetSequenceKeyDelta() []uint64 {
	if x != nil {
		return x.SequenceKeyDelta
	}
	return nil
}

func (x *PutRequest) GetSecondaryIndexes() []*SecondaryIndex {
	if x != nil {
		return x.SecondaryIndexes
	}
	return nil
}

// *
// The response to a put request.
type PutResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Includes the error or OK
	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=io.oxia.proto.v1.Status" json:"status,omitempty"`
	// The version if the put was successful
	Version *Version `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// If the key was generated by Oxia, it will be returned as part
	// of the response
	Key           *string `protobuf:"bytes,3,opt,name=key,proto3,oneof" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_client_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{11}
}

func (x *PutResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *PutResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *PutResponse) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

// *
// A delete request. Deletes the specified key.
type DeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// An optional expected version_id. The delete will fail if the server's current version_id
	// does not match
	ExpectedVersionId *int64 `protobuf:"varint,2,opt,name=expected_version_id,json=expectedVersionId,proto3,oneof" json:"expected_version_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_client_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteRequest) GetExpectedVersionId() int64 {
	if x != nil && x.ExpectedVersionId != nil {
		return *x.ExpectedVersionId
	}
	return 0
}

// *
// The response to a delete request or an item in a response to the
// delete range request.
type DeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Includes the error or OK
	Status        Status `protobuf:"varint,1,opt,name=status,proto3,enum=io.oxia.proto.v1.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_client_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

// *
// A get request. Gets the stat and optionally the value for the specified
// key.
type GetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Specifies whether the response should include the value
	IncludeValue       bool              `protobuf:"varint,2,opt,name=include_value,json=includeValue,proto3" json:"include_value,omitempty"`
	ComparisonType     KeyComparisonType `protobuf:"varint,3,opt,name=comparison_type,json=comparisonType,proto3,enum=io.oxia.proto.v1.KeyComparisonType" json:"comparison_type,omitempty"`
	SecondaryIndexName *string           `protobuf:"bytes,4,opt,name=secondary_index_name,json=secondaryIndexName,proto3,oneof" json:"secondary_index_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_client_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{14}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRequest) GetIncludeValue() bool {
	if x != nil {
		return x.IncludeValue
	}
	return false
}

func (x *GetRequest) GetComparisonType() KeyComparisonType {
	if x != nil {
		return x.ComparisonType
	}
	return KeyComparisonType_EQUAL
}

func (x *GetRequest) GetSecondaryIndexName() string {
	if x != nil && x.SecondaryIndexName != nil {
		return *x.SecondaryIndexName
	}
	return ""
}

// *
// The response to a get request.
type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Includes the error or OK
	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=io.oxia.proto.v1.Status" json:"status,omitempty"`
	// The version of the record
	Version *Version `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// The value, if it was requested and there was no error
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3,oneof" json:"value,omitempty"`
	// In case of non-exact queries (eg. floor, ceiling) the found key will be
	// returned in the GetResponse.
	Key               *string `protobuf:"bytes,4,opt,name=key,proto3,oneof" json:"key,omitempty"`
	SecondaryIndexKey *string `protobuf:"bytes,5,opt,name=secondary_index_key,json=secondaryIndexKey,proto3,oneof" json:"secondary_index_key,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_client_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{15}
}

func (x *GetResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *GetResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResponse) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *GetResponse) GetSecondaryIndexKey() string {
	if x != nil && x.SecondaryIndexKey != nil {
		return *x.SecondaryIndexKey
	}
	return ""
}

// *
// Input to a delete range request. Key ranges assume a UTF-8 byte sort order.
type DeleteRangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The start of the range, inclusive
	StartInclusive string `protobuf:"bytes,1,opt,name=start_inclusive,json=startInclusive,proto3" json:"start_inclusive,omitempty"`
	// The end of the range, exclusive
	EndExclusive  string `protobuf:"bytes,2,opt,name=end_exclusive,json=endExclusive,proto3" json:"end_exclusive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRangeRequest) Reset() {
	*x = DeleteRangeRequest{}
	mi := &file_client_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRangeRequest) ProtoMessage() {}

func (x *DeleteRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRangeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRangeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRangeRequest) GetStartInclusive() string {
	if x != nil {
		return x.StartInclusive
	}
	return ""
}

func (x *DeleteRangeRequest) GetEndExclusive() string {
	if x != nil {
		return x.EndExclusive
	}
	return ""
}

// *
// The response for a delete range request.
type DeleteRangeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Includes the error or OK
	Status        Status `protobuf:"varint,1,opt,name=status,proto3,enum=io.oxia.proto.v1.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRangeResponse) Reset() {
	*x = DeleteRangeResponse{}
	mi := &file_client_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRangeResponse) ProtoMessage() {}

func (x *DeleteRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRangeResponse.ProtoReflect.Descriptor instead.
func (*DeleteRangeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRangeResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

// *
// Input to a list request. Key ranges assume a UTF-8 byte sort order.
type ListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The shard id. This is optional allow for support for server-side hashing
	// and proxying in the future.
	Shard *int64 `protobuf:"varint,1,opt,name=shard,proto3,oneof" json:"shard,omitempty"`
	// The start of the range, inclusive
	StartInclusive string `protobuf:"bytes,2,opt,name=start_inclusive,json=startInclusive,proto3" json:"start_inclusive,omitempty"`
	// The end of the range, exclusive
	EndExclusive       string  `protobuf:"bytes,3,opt,name=end_exclusive,json=endExclusive,proto3" json:"end_exclusive,omitempty"`
	SecondaryIndexName *string `protobuf:"bytes,4,opt,name=secondary_index_name,json=secondaryIndexName,proto3,oneof" json:"secondary_index_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_client_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{18}
}

func (x *ListRequest) GetShard() int64 {
	if x != nil && x.Shard != nil {
		return *x.Shard
	}
	return 0
}

func (x *ListRequest) GetStartInclusive() string {
	if x != nil {
		return x.StartInclusive
	}
	return ""
}

func (x *ListRequest) GetEndExclusive() string {
	if x != nil {
		return x.EndExclusive
	}
	return ""
}

func (x *ListRequest) GetSecondaryIndexName() string {
	if x != nil && x.SecondaryIndexName != nil {
		return *x.SecondaryIndexName
	}
	return ""
}

// *
// The response to a list request.
type ListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A portion of the keys found within the specified range
	Keys          []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_client_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{19}
}

func (x *ListResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

// *
// Input to a range-scan request
type RangeScanRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The shard id. This is optional allow for support for server-side hashing
	// and proxying in the future.
	Shard *int64 `protobuf:"varint,1,opt,name=shard,proto3,oneof" json:"shard,omitempty"`
	// The start of the range, inclusive
	StartInclusive string `protobuf:"bytes,2,opt,name=start_inclusive,json=startInclusive,proto3" json:"start_inclusive,omitempty"`
	// The end of the range, exclusive
	EndExclusive       string  `protobuf:"bytes,3,opt,name=end_exclusive,json=endExclusive,proto3" json:"end_exclusive,omitempty"`
	SecondaryIndexName *string `protobuf:"bytes,4,opt,name=secondary_index_name,json=secondaryIndexName,proto3,oneof" json:"secondary_index_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RangeScanRequest) Reset() {
	*x = RangeScanRequest{}
	mi := &file_client_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeScanRequest) ProtoMessage() {}

func (x *RangeScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeScanRequest.ProtoReflect.Descriptor instead.
func (*RangeScanRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{20}
}

func (x *RangeScanRequest) GetShard() int64 {
	if x != nil && x.Shard != nil {
		return *x.Shard
	}
	return 0
}

func (x *RangeScanRequest) GetStartInclusive() string {
	if x != nil {
		return x.StartInclusive
	}
	return ""
}

func (x *RangeScanRequest) GetEndExclusive() string {
	if x != nil {
		return x.EndExclusive
	}
	return ""
}

func (x *RangeScanRequest) GetSecondaryIndexName() string {
	if x != nil && x.SecondaryIndexName != nil {
		return *x.SecondaryIndexName
	}
	return ""
}

// *
// The response to a range-scan request.
type RangeScanResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A portion of the records found within the specified range
	Records       []*GetResponse `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeScanResponse) Reset() {
	*x = RangeScanResponse{}
	mi := &file_client_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeScanResponse) ProtoMessage() {}

func (x *RangeScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeScanResponse.ProtoReflect.Descriptor instead.
func (*RangeScanResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{21}
}

func (x *RangeScanResponse) GetRecords() []*GetResponse {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetSequenceUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shard         int64                  `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSequenceUpdatesRequest) Reset() {
	*x = GetSequenceUpdatesRequest{}
	mi := &file_client_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSequenceUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSequenceUpdatesRequest) ProtoMessage() {}

func (x *GetSequenceUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSequenceUpdatesRequest.ProtoReflect.Descriptor instead.
func (*GetSequenceUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{22}
}

func (x *GetSequenceUpdatesRequest) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *GetSequenceUpdatesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetSequenceUpdatesResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	HighestSequenceKey string                 `protobuf:"bytes,1,opt,name=highest_sequence_key,json=highestSequenceKey,proto3" json:"highest_sequence_key,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetSequenceUpdatesResponse) Reset() {
	*x = GetSequenceUpdatesResponse{}
	mi := &file_client_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSequenceUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSequenceUpdatesResponse) ProtoMessage() {}

func (x *GetSequenceUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSequenceUpdatesResponse.ProtoReflect.Descriptor instead.
func (*GetSequenceUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{23}
}

func (x *GetSequenceUpdatesResponse) GetHighestSequenceKey() string {
	if x != nil {
		return x.HighestSequenceKey
	}
	return ""
}

// *
// Version contains info about the state of a record.
type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The version identifier of the record
	VersionId int64 `protobuf:"varint,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// The number of modifications made to the record since
	// it was created
	ModificationsCount int64 `protobuf:"varint,2,opt,name=modifications_count,json=modificationsCount,proto3" json:"modifications_count,omitempty"`
	// The creation timestamp of the first version of the record
	CreatedTimestamp uint64 `protobuf:"fixed64,3,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	// The modified timestamp of the current version of the record
	ModifiedTimestamp uint64 `protobuf:"fixed64,4,opt,name=modified_timestamp,json=modifiedTimestamp,proto3" json:"modified_timestamp,omitempty"`
	// Identifier of the session if the record is ephemeral
	SessionId      *int64  `protobuf:"varint,5,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	ClientIdentity *string `protobuf:"bytes,6,opt,name=client_identity,json=clientIdentity,proto3,oneof" json:"client_identity,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_client_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{24}
}

func (x *Version) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *Version) GetModificationsCount() int64 {
	if x != nil {
		return x.ModificationsCount
	}
	return 0
}

func (x *Version) GetCreatedTimestamp() uint64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *Version) GetModifiedTimestamp() uint64 {
	if x != nil {
		return x.ModifiedTimestamp
	}
	return 0
}

func (x *Version) GetSessionId() int64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *Version) GetClientIdentity() string {
	if x != nil && x.ClientIdentity != nil {
		return *x.ClientIdentity
	}
	return ""
}

type CreateSessionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Shard            int64                  `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	SessionTimeoutMs uint32                 `protobuf:"varint,2,opt,name=session_timeout_ms,json=sessionTimeoutMs,proto3" json:"session_timeout_ms,omitempty"`
	ClientIdentity   string                 `protobuf:"bytes,3,opt,name=client_identity,json=clientIdentity,proto3" json:"client_identity,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_client_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{25}
}

func (x *CreateSessionRequest) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *CreateSessionRequest) GetSessionTimeoutMs() uint32 {
	if x != nil {
		return x.SessionTimeoutMs
	}
	return 0
}

func (x *CreateSessionRequest) GetClientIdentity() string {
	if x != nil {
		return x.ClientIdentity
	}
	return ""
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     int64                  `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_client_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{26}
}

func (x *CreateSessionResponse) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type SessionHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shard         int64                  `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	SessionId     int64                  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionHeartbeat) Reset() {
	*x = SessionHeartbeat{}
	mi := &file_client_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionHeartbeat) ProtoMessage() {}

func (x *SessionHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionHeartbeat.ProtoReflect.Descriptor instead.
func (*SessionHeartbeat) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{27}
}

func (x *SessionHeartbeat) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *SessionHeartbeat) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type KeepAliveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepAliveResponse) Reset() {
	*x = KeepAliveResponse{}
	mi := &file_client_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveResponse) ProtoMessage() {}

func (x *KeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveResponse.ProtoReflect.Descriptor instead.
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{28}
}

type CloseSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shard         int64                  `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	SessionId     int64                  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSessionRequest) Reset() {
	*x = CloseSessionRequest{}
	mi := &file_client_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionRequest) ProtoMessage() {}

func (x *CloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionRequest.ProtoReflect.Descriptor instead.
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{29}
}

func (x *CloseSessionRequest) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *CloseSessionRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type CloseSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseSessionResponse) Reset() {
	*x = CloseSessionResponse{}
	mi := &file_client_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResponse) ProtoMessage() {}

func (x *CloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResponse.ProtoReflect.Descriptor instead.
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{30}
}

type NotificationsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Shard                int64                  `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	StartOffsetExclusive *int64                 `protobuf:"varint,2,opt,name=start_offset_exclusive,json=startOffsetExclusive,proto3,oneof" json:"start_offset_exclusive,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NotificationsRequest) Reset() {
	*x = NotificationsRequest{}
	mi := &file_client_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsRequest) ProtoMessage() {}

func (x *NotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{31}
}

func (x *NotificationsRequest) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *NotificationsRequest) GetStartOffsetExclusive() int64 {
	if x != nil && x.StartOffsetExclusive != nil {
		return *x.StartOffsetExclusive
	}
	return 0
}

type NotificationBatch struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Shard         int64                    `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	Offset        int64                    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp     uint64                   `protobuf:"fixed64,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Notifications map[string]*Notification `protobuf:"bytes,4,rep,name=notifications,proto3" json:"notifications,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationBatch) Reset() {
	*x = NotificationBatch{}
	mi := &file_client_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationBatch) ProtoMessage() {}

func (x *NotificationBatch) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationBatch.ProtoReflect.Descriptor instead.
func (*NotificationBatch) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{32}
}

func (x *NotificationBatch) GetShard() int64 {
	if x != nil {
		return x.Shard
	}
	return 0
}

func (x *NotificationBatch) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *NotificationBatch) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NotificationBatch) GetNotifications() map[string]*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          NotificationType       `protobuf:"varint,1,opt,name=type,proto3,enum=io.oxia.proto.v1.NotificationType" json:"type,omitempty"`
	VersionId     *int64                 `protobuf:"varint,2,opt,name=version_id,json=versionId,proto3,oneof" json:"version_id,omitempty"`
	KeyRangeLast  *string                `protobuf:"bytes,3,opt,name=key_range_last,json=keyRangeLast,proto3,oneof" json:"key_range_last,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_client_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{33}
}

func (x *Notification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_KEY_CREATED
}

func (x *Notification) GetVersionId() int64 {
	if x != nil && x.VersionId != nil {
		return *x.VersionId
	}
	return 0
}

func (x *Notification) GetKeyRangeLast() string {
	if x != nil && x.KeyRangeLast != nil {
		return *x.KeyRangeLast
	}
	return ""
}

var File_client_proto protoreflect.FileDescriptor

const file_client_proto_rawDesc = "" +
	"\n" +
	"\fclient.proto\x12\x10io.oxia.proto.v1\"7\n" +
	"\x17ShardAssignmentsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"\xd2\x01\n" +
	"\x10ShardAssignments\x12R\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v22.io.oxia.proto.v1.ShardAssignments.NamespacesEntryR\n" +
	"namespaces\x1aj\n" +
	"\x0fNamespacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.io.oxia.proto.v1.NamespaceShardsAssignmentR\x05value:\x028\x01\"\xac\x01\n" +
	"\x19NamespaceShardsAssignment\x12C\n" +
	"\vassignments\x18\x01 \x03(\v2!.io.oxia.proto.v1.ShardAssignmentR\vassignments\x12J\n" +
	"\x10shard_key_router\x18\x02 \x01(\x0e2 .io.oxia.proto.v1.ShardKeyRouterR\x0eshardKeyRouter\"\xa1\x01\n" +
	"\x0fShardAssignment\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x12\x16\n" +
	"\x06leader\x18\x02 \x01(\tR\x06leader\x12L\n" +
	"\x10int32_hash_range\x18\x03 \x01(\v2 .io.oxia.proto.v1.Int32HashRangeH\x00R\x0eint32HashRangeB\x12\n" +
	"\x10shard_boundaries\"l\n" +
	"\x0eInt32HashRange\x12,\n" +
	"\x12min_hash_inclusive\x18\x01 \x01(\aR\x10minHashInclusive\x12,\n" +
	"\x12max_hash_inclusive\x18\x02 \x01(\aR\x10maxHashInclusive\"\xeb\x01\n" +
	"\fWriteRequest\x12\x19\n" +
	"\x05shard\x18\x01 \x01(\x03H\x00R\x05shard\x88\x01\x01\x120\n" +
	"\x04puts\x18\x02 \x03(\v2\x1c.io.oxia.proto.v1.PutRequestR\x04puts\x129\n" +
	"\adeletes\x18\x03 \x03(\v2\x1f.io.oxia.proto.v1.DeleteRequestR\adeletes\x12I\n" +
	"\rdelete_ranges\x18\x04 \x03(\v2$.io.oxia.proto.v1.DeleteRangeRequestR\fdeleteRangesB\b\n" +
	"\x06_shard\"\xca\x01\n" +
	"\rWriteResponse\x121\n" +
	"\x04puts\x18\x01 \x03(\v2\x1d.io.oxia.proto.v1.PutResponseR\x04puts\x12:\n" +
	"\adeletes\x18\x02 \x03(\v2 .io.oxia.proto.v1.DeleteResponseR\adeletes\x12J\n" +
	"\rdelete_ranges\x18\x03 \x03(\v2%.io.oxia.proto.v1.DeleteRangeResponseR\fdeleteRanges\"d\n" +
	"\vReadRequest\x12\x19\n" +
	"\x05shard\x18\x01 \x01(\x03H\x00R\x05shard\x88\x01\x01\x120\n" +
	"\x04gets\x18\x02 \x03(\v2\x1c.io.oxia.proto.v1.GetRequestR\x04getsB\b\n" +
	"\x06_shard\"A\n" +
	"\fReadResponse\x121\n" +
	"\x04gets\x18\x01 \x03(\v2\x1d.io.oxia.proto.v1.GetResponseR\x04gets\"T\n" +
	"\x0eSecondaryIndex\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12#\n" +
	"\rsecondary_key\x18\x02 \x01(\tR\fsecondaryKey\"\xaf\x03\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x123\n" +
	"\x13expected_version_id\x18\x03 \x01(\x03H\x00R\x11expectedVersionId\x88\x01\x01\x12\"\n" +
	"\n" +
	"session_id\x18\x04 \x01(\x03H\x01R\tsessionId\x88\x01\x01\x12,\n" +
	"\x0fclient_identity\x18\x05 \x01(\tH\x02R\x0eclientIdentity\x88\x01\x01\x12(\n" +
	"\rpartition_key\x18\x06 \x01(\tH\x03R\fpartitionKey\x88\x01\x01\x12,\n" +
	"\x12sequence_key_delta\x18\a \x03(\x04R\x10sequenceKeyDelta\x12M\n" +
	"\x11secondary_indexes\x18\b \x03(\v2 .io.oxia.proto.v1.SecondaryIndexR\x10secondaryIndexesB\x16\n" +
	"\x14_expected_version_idB\r\n" +
	"\v_session_idB\x12\n" +
	"\x10_client_identityB\x10\n" +
	"\x0e_partition_key\"\x93\x01\n" +
	"\vPutResponse\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.io.oxia.proto.v1.StatusR\x06status\x123\n" +
	"\aversion\x18\x02 \x01(\v2\x19.io.oxia.proto.v1.VersionR\aversion\x12\x15\n" +
	"\x03key\x18\x03 \x01(\tH\x00R\x03key\x88\x01\x01B\x06\n" +
	"\x04_key\"n\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x13expected_version_id\x18\x02 \x01(\x03H\x00R\x11expectedVersionId\x88\x01\x01B\x16\n" +
	"\x14_expected_version_id\"B\n" +
	"\x0eDeleteResponse\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.io.oxia.proto.v1.StatusR\x06status\"\xe1\x01\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\rinclude_value\x18\x02 \x01(\bR\fincludeValue\x12L\n" +
	"\x0fcomparison_type\x18\x03 \x01(\x0e2#.io.oxia.proto.v1.KeyComparisonTypeR\x0ecomparisonType\x125\n" +
	"\x14secondary_index_name\x18\x04 \x01(\tH\x00R\x12secondaryIndexName\x88\x01\x01B\x17\n" +
	"\x15_secondary_index_name\"\x85\x02\n" +
	"\vGetResponse\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.io.oxia.proto.v1.StatusR\x06status\x123\n" +
	"\aversion\x18\x02 \x01(\v2\x19.io.oxia.proto.v1.VersionR\aversion\x12\x19\n" +
	"\x05value\x18\x03 \x01(\fH\x00R\x05value\x88\x01\x01\x12\x15\n" +
	"\x03key\x18\x04 \x01(\tH\x01R\x03key\x88\x01\x01\x123\n" +
	"\x13secondary_index_key\x18\x05 \x01(\tH\x02R\x11secondaryIndexKey\x88\x01\x01B\b\n" +
	"\x06_valueB\x06\n" +
	"\x04_keyB\x16\n" +
	"\x14_secondary_index_key\"b\n" +
	"\x12DeleteRangeRequest\x12'\n" +
	"\x0fstart_inclusive\x18\x01 \x01(\tR\x0estartInclusive\x12#\n" +
	"\rend_exclusive\x18\x02 \x01(\tR\fendExclusive\"G\n" +
	"\x13DeleteRangeResponse\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.io.oxia.proto.v1.StatusR\x06status\"\xd0\x01\n" +
	"\vListRequest\x12\x19\n" +
	"\x05shard\x18\x01 \x01(\x03H\x00R\x05shard\x88\x01\x01\x12'\n" +
	"\x0fstart_inclusive\x18\x02 \x01(\tR\x0estartInclusive\x12#\n" +
	"\rend_exclusive\x18\x03 \x01(\tR\fendExclusive\x125\n" +
	"\x14secondary_index_name\x18\x04 \x01(\tH\x01R\x12secondaryIndexName\x88\x01\x01B\b\n" +
	"\x06_shardB\x17\n" +
	"\x15_secondary_index_name\"\"\n" +
	"\fListResponse\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"\xd5\x01\n" +
	"\x10RangeScanRequest\x12\x19\n" +
	"\x05shard\x18\x01 \x01(\x03H\x00R\x05shard\x88\x01\x01\x12'\n" +
	"\x0fstart_inclusive\x18\x02 \x01(\tR\x0estartInclusive\x12#\n" +
	"\rend_exclusive\x18\x03 \x01(\tR\fendExclusive\x125\n" +
	"\x14secondary_index_name\x18\x04 \x01(\tH\x01R\x12secondaryIndexName\x88\x01\x01B\b\n" +
	"\x06_shardB\x17\n" +
	"\x15_secondary_index_name\"L\n" +
	"\x11RangeScanResponse\x127\n" +
	"\arecords\x18\x01 \x03(\v2\x1d.io.oxia.proto.v1.GetResponseR\arecords\"C\n" +
	"\x19GetSequenceUpdatesRequest\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"N\n" +
	"\x1aGetSequenceUpdatesResponse\x120\n" +
	"\x14highest_sequence_key\x18\x01 \x01(\tR\x12highestSequenceKey\"\xaa\x02\n" +
	"\aVersion\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\x03R\tversionId\x12/\n" +
	"\x13modifications_count\x18\x02 \x01(\x03R\x12modificationsCount\x12+\n" +
	"\x11created_timestamp\x18\x03 \x01(\x06R\x10createdTimestamp\x12-\n" +
	"\x12modified_timestamp\x18\x04 \x01(\x06R\x11modifiedTimestamp\x12\"\n" +
	"\n" +
	"session_id\x18\x05 \x01(\x03H\x00R\tsessionId\x88\x01\x01\x12,\n" +
	"\x0fclient_identity\x18\x06 \x01(\tH\x01R\x0eclientIdentity\x88\x01\x01B\r\n" +
	"\v_session_idB\x12\n" +
	"\x10_client_identity\"\x83\x01\n" +
	"\x14CreateSessionRequest\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x12,\n" +
	"\x12session_timeout_ms\x18\x02 \x01(\rR\x10sessionTimeoutMs\x12'\n" +
	"\x0fclient_identity\x18\x03 \x01(\tR\x0eclientIdentity\"6\n" +
	"\x15CreateSessionResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x03R\tsessionId\"G\n" +
	"\x10SessionHeartbeat\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\x03R\tsessionId\"\x13\n" +
	"\x11KeepAliveResponse\"J\n" +
	"\x13CloseSessionRequest\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\x03R\tsessionId\"\x16\n" +
	"\x14CloseSessionResponse\"\x82\x01\n" +
	"\x14NotificationsRequest\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x129\n" +
	"\x16start_offset_exclusive\x18\x02 \x01(\x03H\x00R\x14startOffsetExclusive\x88\x01\x01B\x19\n" +
	"\x17_start_offset_exclusive\"\x9f\x02\n" +
	"\x11NotificationBatch\x12\x14\n" +
	"\x05shard\x18\x01 \x01(\x03R\x05shard\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x06R\ttimestamp\x12\\\n" +
	"\rnotifications\x18\x04 \x03(\v26.io.oxia.proto.v1.NotificationBatch.NotificationsEntryR\rnotifications\x1a`\n" +
	"\x12NotificationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.io.oxia.proto.v1.NotificationR\x05value:\x028\x01\"\xb7\x01\n" +
	"\fNotification\x126\n" +
	"\x04type\x18\x01 \x01(\x0e2\".io.oxia.proto.v1.NotificationTypeR\x04type\x12\"\n" +
	"\n" +
	"version_id\x18\x02 \x01(\x03H\x00R\tversionId\x88\x01\x01\x12)\n" +
	"\x0ekey_range_last\x18\x03 \x01(\tH\x01R\fkeyRangeLast\x88\x01\x01B\r\n" +
	"\v_version_idB\x11\n" +
	"\x0f_key_range_last**\n" +
	"\x0eShardKeyRouter\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aXXHASH3\x10\x01*M\n" +
	"\x11KeyComparisonType\x12\t\n" +
	"\x05EQUAL\x10\x00\x12\t\n" +
	"\x05FLOOR\x10\x01\x12\v\n" +
	"\aCEILING\x10\x02\x12\t\n" +
	"\x05LOWER\x10\x03\x12\n" +
	"\n" +
	"\x06HIGHER\x10\x04*Z\n" +
	"\x06Status\x12\x06\n" +
	"\x02OK\x10\x00\x12\x11\n" +
	"\rKEY_NOT_FOUND\x10\x01\x12\x19\n" +
	"\x15UNEXPECTED_VERSION_ID\x10\x02\x12\x1a\n" +
	"\x16SESSION_DOES_NOT_EXIST\x10\x03*]\n" +
	"\x10NotificationType\x12\x0f\n" +
	"\vKEY_CREATED\x10\x00\x12\x10\n" +
	"\fKEY_MODIFIED\x10\x01\x12\x0f\n" +
	"\vKEY_DELETED\x10\x02\x12\x15\n" +
	"\x11KEY_RANGE_DELETED\x10\x032\xe9\a\n" +
	"\n" +
	"OxiaClient\x12f\n" +
	"\x13GetShardAssignments\x12).io.oxia.proto.v1.ShardAssignmentsRequest\x1a\".io.oxia.proto.v1.ShardAssignments0\x01\x12H\n" +
	"\x05Write\x12\x1e.io.oxia.proto.v1.WriteRequest\x1a\x1f.io.oxia.proto.v1.WriteResponse\x12R\n" +
	"\vWriteStream\x12\x1e.io.oxia.proto.v1.WriteRequest\x1a\x1f.io.oxia.proto.v1.WriteResponse(\x010\x01\x12G\n" +
	"\x04Read\x12\x1d.io.oxia.proto.v1.ReadRequest\x1a\x1e.io.oxia.proto.v1.ReadResponse0\x01\x12G\n" +
	"\x04List\x12\x1d.io.oxia.proto.v1.ListRequest\x1a\x1e.io.oxia.proto.v1.ListResponse0\x01\x12V\n" +
	"\tRangeScan\x12\".io.oxia.proto.v1.RangeScanRequest\x1a#.io.oxia.proto.v1.RangeScanResponse0\x01\x12q\n" +
	"\x12GetSequenceUpdates\x12+.io.oxia.proto.v1.GetSequenceUpdatesRequest\x1a,.io.oxia.proto.v1.GetSequenceUpdatesResponse0\x01\x12a\n" +
	"\x10GetNotifications\x12&.io.oxia.proto.v1.NotificationsRequest\x1a#.io.oxia.proto.v1.NotificationBatch0\x01\x12`\n" +
	"\rCreateSession\x12&.io.oxia.proto.v1.CreateSessionRequest\x1a'.io.oxia.proto.v1.CreateSessionResponse\x12T\n" +
	"\tKeepAlive\x12\".io.oxia.proto.v1.SessionHeartbeat\x1a#.io.oxia.proto.v1.KeepAliveResponse\x12]\n" +
	"\fCloseSession\x12%.io.oxia.proto.v1.CloseSessionRequest\x1a&.io.oxia.proto.v1.CloseSessionResponseB!P\x01Z\x1dgithub.com/oxia-db/oxia/protob\x06proto3"

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData []byte
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_client_proto_rawDesc), len(file_client_proto_rawDesc)))
	})
	return file_client_proto_rawDescData
}

var file_client_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_client_proto_goTypes = []any{
	(ShardKeyRouter)(0),                // 0: io.oxia.proto.v1.ShardKeyRouter
	(KeyComparisonType)(0),             // 1: io.oxia.proto.v1.KeyComparisonType
	(Status)(0),                        // 2: io.oxia.proto.v1.Status
	(NotificationType)(0),              // 3: io.oxia.proto.v1.NotificationType
	(*ShardAssignmentsRequest)(nil),    // 4: io.oxia.proto.v1.ShardAssignmentsRequest
	(*ShardAssignments)(nil),           // 5: io.oxia.proto.v1.ShardAssignments
	(*NamespaceShardsAssignment)(nil),  // 6: io.oxia.proto.v1.NamespaceShardsAssignment
	(*ShardAssignment)(nil),            // 7: io.oxia.proto.v1.ShardAssignment
	(*Int32HashRange)(nil),             // 8: io.oxia.proto.v1.Int32HashRange
	(*WriteRequest)(nil),               // 9: io.oxia.proto.v1.WriteRequest
	(*WriteResponse)(nil),              // 10: io.oxia.proto.v1.WriteResponse
	(*ReadRequest)(nil),                // 11: io.oxia.proto.v1.ReadRequest
	(*ReadResponse)(nil),               // 12: io.oxia.proto.v1.ReadResponse
	(*SecondaryIndex)(nil),             // 13: io.oxia.proto.v1.SecondaryIndex
	(*PutRequest)(nil),                 // 14: io.oxia.proto.v1.PutRequest
	(*PutResponse)(nil),                // 15: io.oxia.proto.v1.PutResponse
	(*DeleteRequest)(nil),              // 16: io.oxia.proto.v1.DeleteRequest
	(*DeleteResponse)(nil),             // 17: io.oxia.proto.v1.DeleteResponse
	(*GetRequest)(nil),                 // 18: io.oxia.proto.v1.GetRequest
	(*GetResponse)(nil),                // 19: io.oxia.proto.v1.GetResponse
	(*DeleteRangeRequest)(nil),         // 20: io.oxia.proto.v1.DeleteRangeRequest
	(*DeleteRangeResponse)(nil),        // 21: io.oxia.proto.v1.DeleteRangeResponse
	(*ListRequest)(nil),                // 22: io.oxia.proto.v1.ListRequest
	(*ListResponse)(nil),               // 23: io.oxia.proto.v1.ListResponse
	(*RangeScanRequest)(nil),           // 24: io.oxia.proto.v1.RangeScanRequest
	(*RangeScanResponse)(nil),          // 25: io.oxia.proto.v1.RangeScanResponse
	(*GetSequenceUpdatesRequest)(nil),  // 26: io.oxia.proto.v1.GetSequenceUpdatesRequest
	(*GetSequenceUpdatesResponse)(nil), // 27: io.oxia.proto.v1.GetSequenceUpdatesResponse
	(*Version)(nil),                    // 28: io.oxia.proto.v1.Version
	(*CreateSessionRequest)(nil),       // 29: io.oxia.proto.v1.CreateSessionRequest
	(*CreateSessionResponse)(nil),      // 30: io.oxia.proto.v1.CreateSessionResponse
	(*SessionHeartbeat)(nil),           // 31: io.oxia.proto.v1.SessionHeartbeat
	(*KeepAliveResponse)(nil),          // 32: io.oxia.proto.v1.KeepAliveResponse
	(*CloseSessionRequest)(nil),        // 33: io.oxia.proto.v1.CloseSessionRequest
	(*CloseSessionResponse)(nil),       // 34: io.oxia.proto.v1.CloseSessionResponse
	(*NotificationsRequest)(nil),       // 35: io.oxia.proto.v1.NotificationsRequest
	(*NotificationBatch)(nil),          // 36: io.oxia.proto.v1.NotificationBatch
	(*Notification)(nil),               // 37: io.oxia.proto.v1.Notification
	nil,                                // 38: io.oxia.proto.v1.ShardAssignments.NamespacesEntry
	nil,                                // 39: io.oxia.proto.v1.NotificationBatch.NotificationsEntry
}
var file_client_proto_depIdxs = []int32{
	38, // 0: io.oxia.proto.v1.ShardAssignments.namespaces:type_name -> io.oxia.proto.v1.ShardAssignments.NamespacesEntry
	7,  // 1: io.oxia.proto.v1.NamespaceShardsAssignment.assignments:type_name -> io.oxia.proto.v1.ShardAssignment
	0,  // 2: io.oxia.proto.v1.NamespaceShardsAssignment.shard_key_router:type_name -> io.oxia.proto.v1.ShardKeyRouter
	8,  // 3: io.oxia.proto.v1.ShardAssignment.int32_hash_range:type_name -> io.oxia.proto.v1.Int32HashRange
	14, // 4: io.oxia.proto.v1.WriteRequest.puts:type_name -> io.oxia.proto.v1.PutRequest
	16, // 5: io.oxia.proto.v1.WriteRequest.deletes:type_name -> io.oxia.proto.v1.DeleteRequest
	20, // 6: io.oxia.proto.v1.WriteRequest.delete_ranges:type_name -> io.oxia.proto.v1.DeleteRangeRequest
	15, // 7: io.oxia.proto.v1.WriteResponse.puts:type_name -> io.oxia.proto.v1.PutResponse
	17, // 8: io.oxia.proto.v1.WriteResponse.deletes:type_name -> io.oxia.proto.v1.DeleteResponse
	21, // 9: io.oxia.proto.v1.WriteResponse.delete_ranges:type_name -> io.oxia.proto.v1.DeleteRangeResponse
	18, // 10: io.oxia.proto.v1.ReadRequest.gets:type_name -> io.oxia.proto.v1.GetRequest
	19, // 11: io.oxia.proto.v1.ReadResponse.gets:type_name -> io.oxia.proto.v1.GetResponse
	13, // 12: io.oxia.proto.v1.PutRequest.secondary_indexes:type_name -> io.oxia.proto.v1.SecondaryIndex
	2,  // 13: io.oxia.proto.v1.PutResponse.status:type_name -> io.oxia.proto.v1.Status
	28, // 14: io.oxia.proto.v1.PutResponse.version:type_name -> io.oxia.proto.v1.Version
	2,  // 15: io.oxia.proto.v1.DeleteResponse.status:type_name -> io.oxia.proto.v1.Status
	1,  // 16: io.oxia.proto.v1.GetRequest.comparison_type:type_name -> io.oxia.proto.v1.KeyComparisonType
	2,  // 17: io.oxia.proto.v1.GetResponse.status:type_name -> io.oxia.proto.v1.Status
	28, // 18: io.oxia.proto.v1.GetResponse.version:type_name -> io.oxia.proto.v1.Version
	2,  // 19: io.oxia.proto.v1.DeleteRangeResponse.status:type_name -> io.oxia.proto.v1.Status
	19, // 20: io.oxia.proto.v1.RangeScanResponse.records:type_name -> io.oxia.proto.v1.GetResponse
	39, // 21: io.oxia.proto.v1.NotificationBatch.notifications:type_name -> io.oxia.proto.v1.NotificationBatch.NotificationsEntry
	3,  // 22: io.oxia.proto.v1.Notification.type:type_name -> io.oxia.proto.v1.NotificationType
	6,  // 23: io.oxia.proto.v1.ShardAssignments.NamespacesEntry.value:type_name -> io.oxia.proto.v1.NamespaceShardsAssignment
	37, // 24: io.oxia.proto.v1.NotificationBatch.NotificationsEntry.value:type_name -> io.oxia.proto.v1.Notification
	4,  // 25: io.oxia.proto.v1.OxiaClient.GetShardAssignments:input_type -> io.oxia.proto.v1.ShardAssignmentsRequest
	9,  // 26: io.oxia.proto.v1.OxiaClient.Write:input_type -> io.oxia.proto.v1.WriteRequest
	9,  // 27: io.oxia.proto.v1.OxiaClient.WriteStream:input_type -> io.oxia.proto.v1.WriteRequest
	11, // 28: io.oxia.proto.v1.OxiaClient.Read:input_type -> io.oxia.proto.v1.ReadRequest
	22, // 29: io.oxia.proto.v1.OxiaClient.List:input_type -> io.oxia.proto.v1.ListRequest
	24, // 30: io.oxia.proto.v1.OxiaClient.RangeScan:input_type -> io.oxia.proto.v1.RangeScanRequest
	26, // 31: io.oxia.proto.v1.OxiaClient.GetSequenceUpdates:input_type -> io.oxia.proto.v1.GetSequenceUpdatesRequest
	35, // 32: io.oxia.proto.v1.OxiaClient.GetNotifications:input_type -> io.oxia.proto.v1.NotificationsRequest
	29, // 33: io.oxia.proto.v1.OxiaClient.CreateSession:input_type -> io.oxia.proto.v1.CreateSessionRequest
	31, // 34: io.oxia.proto.v1.OxiaClient.KeepAlive:input_type -> io.oxia.proto.v1.SessionHeartbeat
	33, // 35: io.oxia.proto.v1.OxiaClient.CloseSession:input_type -> io.oxia.proto.v1.CloseSessionRequest
	5,  // 36: io.oxia.proto.v1.OxiaClient.GetShardAssignments:output_type -> io.oxia.proto.v1.ShardAssignments
	10, // 37: io.oxia.proto.v1.OxiaClient.Write:output_type -> io.oxia.proto.v1.WriteResponse
	10, // 38: io.oxia.proto.v1.OxiaClient.WriteStream:output_type -> io.oxia.proto.v1.WriteResponse
	12, // 39: io.oxia.proto.v1.OxiaClient.Read:output_type -> io.oxia.proto.v1.ReadResponse
	23, // 40: io.oxia.proto.v1.OxiaClient.List:output_type -> io.oxia.proto.v1.ListResponse
	25, // 41: io.oxia.proto.v1.OxiaClient.RangeScan:output_type -> io.oxia.proto.v1.RangeScanResponse
	27, // 42: io.oxia.proto.v1.OxiaClient.GetSequenceUpdates:output_type -> io.oxia.proto.v1.GetSequenceUpdatesResponse
	36, // 43: io.oxia.proto.v1.OxiaClient.GetNotifications:output_type -> io.oxia.proto.v1.NotificationBatch
	30, // 44: io.oxia.proto.v1.OxiaClient.CreateSession:output_type -> io.oxia.proto.v1.CreateSessionResponse
	32, // 45: io.oxia.proto.v1.OxiaClient.KeepAlive:output_type -> io.oxia.proto.v1.KeepAliveResponse
	34, // 46: io.oxia.proto.v1.OxiaClient.CloseSession:output_type -> io.oxia.proto.v1.CloseSessionResponse
	36, // [36:47] is the sub-list for method output_type
	25, // [25:36] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	file_client_proto_msgTypes[3].OneofWrappers = []any{
		(*ShardAssignment_Int32HashRange)(nil),
	}
	file_client_proto_msgTypes[5].OneofWrappers = []any{}
	file_client_proto_msgTypes[7].OneofWrappers = []any{}
	file_client_proto_msgTypes[10].OneofWrappers = []any{}
	file_client_proto_msgTypes[11].OneofWrappers = []any{}
	file_client_proto_msgTypes[12].OneofWrappers = []any{}
	file_client_proto_msgTypes[14].OneofWrappers = []any{}
	file_client_proto_msgTypes[15].OneofWrappers = []any{}
	file_client_proto_msgTypes[18].OneofWrappers = []any{}
	file_client_proto_msgTypes[20].OneofWrappers = []any{}
	file_client_proto_msgTypes[24].OneofWrappers = []any{}
	file_client_proto_msgTypes[31].OneofWrappers = []any{}
	file_client_proto_msgTypes[33].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_client_proto_rawDesc), len(file_client_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		EnumInfos:         file_client_proto_enumTypes,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
